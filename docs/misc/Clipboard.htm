<!DOCTYPE HTML>
<html>
<head>
<title>Clipboard and ClipboardAll</title>
<meta http-equiv="Content-Type" content="text/html; charset=GB2312">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>

<body>
<h1>Clipboard 和 <a href="#ClipboardAll">ClipboardAll</a></h1>

<p><em>Clipboard</em> 是内置 <a href="../Variables.htm">变量</a>, 它包含当前 Windows 剪贴板中可以用文本形式表示的内容. 与之相比, <em><a href="#ClipboardAll">ClipboardAll</a></em> 包含了剪贴板中的所有内容, 例如图片和其他特定格式的东西.</p>
<p id="CopiedFiles"><em>Clipboard</em> 中的每行文本通常都是以回车和换行符 (CR+LF) 结尾, 它们在脚本中表示为 <code>`r`n</code>. 文件 (例如从资源管理器窗口中使用 Control-C 复制的那些) 被视为文本: 每当在脚本中引用 <em>Clipboard</em> 时, 它们会被自动转换为它们的文件名 (的完整路径). 要逐个提取这些文件, 请参照此例:</p>
<pre><a href="../commands/LoopParse.htm">Loop, parse</a>, clipboard, `n, `r
{
    MsgBox, 4, , File number %A_Index% is %A_LoopField%.`n`nContinue?
    IfMsgBox, No, break
}</pre>
<p>要按字母顺序排列文件名, 请使用 <a href="../commands/Sort.htm">Sort</a> 命令. 要把剪贴板中的文件名写入到文件中, 请使用 <code><a href="../commands/FileAppend.htm">FileAppend</a>, %clipboard%`r`n, C:\My File.txt</code>. 要改变脚本尝试打开剪贴板的持续时间, 例如另一个程序在使用剪贴板的时候, 请使用 <a href="../commands/_ClipboardTimeout.htm">#ClipboardTimeOut</a>.</p>
<strong>基本示例:</strong>
<pre>clipboard = my text   <em>; 在剪贴板中存入新内容.</em>
clipboard =   <em>; 清空剪贴板.</em>
clipboard = %clipboard%   <em>; 把任何复制的文件, HTML 或其他格式的文本转换为纯文本.</em>
clipboard = %clipboard% Text to append.   <em>; 追加一些文本到剪贴板.</em>
StringReplace, clipboard, clipboard, ABC, DEF, All   <em>; 把剪贴板中所有 ABC 替换为 DEF (同时把剪贴板的内容转换为纯文本).</em></pre>

<p><strong>使用 ClipWait 提高脚本的可靠性:</strong></p>
<pre>clipboard =  <em>; 让剪贴板初始为空, 这样可以使用 ClipWait 检测文本什么时候被复制到剪贴板中.</em>
Send ^c
<a href="../commands/ClipWait.htm">ClipWait</a>  <em>; 等待剪贴板中出现文本.</em>
MsgBox Control-C copied the following contents to the clipboard:`n`n%clipboard%</pre>
<h2 id="ClipboardAll">ClipboardAll<span class="ver">(保存并恢复剪贴板中的所有内容)</span></h2>
<p><em>ClipboardAll</em> 包含了剪贴板中的所有内容 (例如图片和格式). 它常用来保存剪贴板的内容, 以便脚本可以在某个操作中临时使用剪贴板. 当这个操作结束后, 脚本可以恢复剪贴板为原来的内容, 如下所示:</p>
<pre>ClipSaved := ClipboardAll   <em>; 把剪贴板的所有内容保存到您选择的变量中.
; ... 这里临时使用剪贴板, 例如使用 <a href="../commands/Transform.htm#Unicode">Transform Unicode</a> 粘贴 Unicode 文本 ...</em>
Clipboard := ClipSaved   <em>; 恢复剪贴板为原来的内容. 注意这里使用 <i>Clipboard</i> (不是 <i>ClipboardAll</i>).</em>
ClipSaved =   <em>; 在原来的剪贴板含大量内容时释放内存.</em></pre>
<p><em>ClipboardAll</em> 中的内容可以保存到文件中 (在这种模式中, FileAppend 总是覆盖任何现有的文件):</p>
<pre><a href="../commands/FileAppend.htm">FileAppend</a>, %ClipboardAll%, C:\Company Logo.clip <em>; 文件扩展名无关紧要.</em></pre>
<p>要在之后加载这个文件的内容回剪贴板 (或变量中), 请参照此例:</p>
<pre><a href="../commands/FileRead.htm">FileRead</a>, Clipboard, <strong>*c</strong> C:\Company Logo.clip <em>; 注意 *c 必须在文件名的前面.</em></pre>
<h3>注意</h3>
<p>除上面描述的方式外的其他方式使用 <em>ClipboardAll</em> 时, 都会得到空值. 此外,<em>ClipboardAll</em> 不支持在<a href="../Variables.htm#comma">逗号分隔的表达式</a>中使用；即它必须在单独的一行进行赋值,例如 <code>ClipSaved := ClipboardAll</code>.</p>
<p>接受了 <em>ClipboardAll</em> 赋值的变量以二进制格式存储数据, 因为使用类似 <a href="../commands/MsgBox.htm">MsgBox</a> 这样的方法显示时会出现乱码. 并且, 修改二进制剪贴板变量 (使用类似 <a href="../commands/StringReplace.htm">StringReplace</a> 的方法) 会将它还原为普通变量, 导致它所保存的剪贴板数据的丢失. 在 v1.0.46+, 二进制剪贴板变量可以作为值传递给 <a href="../Functions.htm#ByRef">函数</a> (以前它们只有作为 <a href="../Functions.htm#ByRef">ByRef</a> 才行).</p>
<p>如果 <em>ClipboardAll</em> 不能获取剪贴板中一个或多个数据对象 (格式), 则会忽略它们但仍保存剩余的所有对象.</p>
<p>包含剪贴板数据的变量可以赋值给另一个变量,例如:<code>ClipSaved2 := ClipSaved</code></p>
<p><a href="../commands/ClipWait.htm">ClipWait</a> 可以用来检测剪贴板包含数据的时候 (可以包含非文本数据).</p>
<p><a href="../commands/StringLen.htm">StrLen / StringLen</a> 可以用来获取接受 <em>ClipboardAll</em> 赋值的变量的总大小.然而, 要在 AutoHotkey 的 Unicode 版本中获取字节的大小, 则前面得到的长度必须乘以 2. <a href="../Variables.htm#IsUnicode">A_IsUnicode</a> 可用来支持 ANSI 和 Unicode 版本,例如:<code>size := StrLen(ClipSaved) * (A_IsUnicode ? 2 : 1)</code>.</p>
<p>接受 <em>ClipboardAll</em> 赋值的变量可以通过 &lt;&gt; 和 = 互相进行比较 (但不能直接和 <em>ClipboardAll</em> 进行比较). 在下面的例子中, 首先检查每个变量的大小. 如果大小不足以判断, 则比较它们的内容来得到结果:</p>
<pre>if ClipSaved1 &lt;&gt; %ClipSaved2%   <em>; 这里 <u>必须</u> 使用旧式的 IF 语句, 不能使用表达式.</em>
    MsgBox The two saved clipboards are different.</pre>
<p>保存 <em>ClipboardAll</em> 到变量时, 这个变量的大小不受 <a href="../commands/_MaxMem.htm">#MaxMem</a> 设置的内存限制.</p>
<p>保存了剪贴板内容的文件内部由四个字节的格式类型, 接着四个字节的数据块大小以及相应的格式的数据块组成. 如果剪贴板中包含多种格式的内容 (大部分时候都是这样), 这三个组成部分会一直重复, 直到包含所有的内容. 文件以四个字节的 0 格式类型结尾.</p>
<p>已知限制: 当剪贴板中含有 Microsoft Excel 单元格数据时获取 <em>ClipboardAll</em> 可能会导致 Excel 弹出 "找不到打印机" 的对话框.</p>
<p>使用 AutoHotkey 编写的剪贴板实用工具:</p>
<ul>
  <li>Deluxe Clipboard: 提供不限数量的私有的命名的剪贴板, 可以用来复制, 剪切, 追加或剪切追加选中的文本. <a href="http://www.autohotkey.com/forum/topic2665.html">www.autohotkey.com/forum/topic2665.html</a></li>
  <li>ClipStep: 仅使用键盘上 Ctrl-X-C-V 控制多个剪贴板. <a href="http://www.autohotkey.com/forum/topic4836.html">www.autohotkey.com/forum/topic4836.html</a></li>
</ul>

<h2 id="OnClipboardChange">OnClipboardChange</h2>
<p>脚本可以使用 <a href="../commands/OnClipboardChange.htm">OnClipboardChange</a> 监视系统剪贴板的改变.</p>

</body>
</html>
