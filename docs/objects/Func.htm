<!DOCTYPE HTML>
<html>
<head>
<title>Func 对象</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Func 对象<span class="ver">[v1.1.00+]</span></h1>

<p>表示可以被脚本调用的自定义或内置的函数.</p>

<p>要查看关于其他可以像函数一样被调用的对象, 请参见 <a href="Functor.htm">Function 对象</a>.</p>

<p>到 Func 对象的引用也被称为 <em>函数引用</em>. 要获取函数引用, 请使用 Func 函数, 例如:</p>
<pre><em>; 引用一个名为 "StrLen" 的函数.</em>
fn := Func("StrLen")

<em>; 显示函数的信息.</em>
MsgBox % fn.Name "() is " (fn.IsBuiltIn ? "built-in." : "user-defined.")</pre>
<br>

<div class="methodShort" id="Call"><h2>Call</h2>
<p>调用函数.</p>
<pre class="Syntax">Func.Call(<i>Parameters</i>)  <em>; v1.1.19+</em>
Func.(<i>Parameters</i>)  <em>; 旧形式 - 不推荐使用</em></pre>
<p>参数和返回值由函数定义.</p>
<p><span class="ver">[v1.1.07+]:</span> <code><a href="../Functions.htm#DynCall">%Func%()</a></code> 可通过名称或引用来调用一个函数,或者通过调用对象的 __Call <a href="../Objects.htm#Meta_Functions">元函数</a>. 应该尽量使用这种语法来替代 <code>Func.()</code> 这种旧的语法.</p>
</div>

<div class="methodShort" id="Bind"><h2>Bind <span class="ver">[v1.1.20+]</span></h2>
<p>为函数绑定参数将返回 <a href="Functor.htm#BoundFunc">BoundFunc 对象</a>.</p>
<pre class="Syntax">BoundFunc := Func.Bind(<i>Parameters</i>)</pre>
<p><i>Parameters</i> 可以是任意数量的参数.</p>
<p>详情和例子,请参阅<a href="Functor.htm#BoundFunc">BoundFunc object</a>.</p>
</div>

<div class="methodShort" id="Name"><h2>Name</h2>
<p>返回函数的名称.</p>
<pre class="Syntax">Func.Name</pre>
</div>

<div class="methodShort" id="IsBuiltIn"><h2>IsBuiltIn</h2>
<p>内置函数返回 <i>true</i>, 否则返回 <i>false</i>.</p>
<pre class="Syntax">Func.IsBuiltIn</pre>
</div>

<div class="methodShort" id="IsVariadic"><h2>IsVariadic</h2>
<p>当函数为 <a href="../Functions.htm#Variadic">可变参数</a> 返回 <i>true</i>, 否则返回 <i>false</i>.</p>
<pre class="Syntax">Func.IsVariadic</pre>
</div>

<div class="methodShort" id="MinParams"><h2>MinParams</h2>
<p>返回函数必要参数的数目.</p>
<pre class="Syntax">Func.MinParams</pre>
</div>

<div class="methodShort" id="MaxParams"><h2>MaxParams</h2>
<p>对于用户定义函数返回正式声明的参数数目,对于内置函数返回最大的参数数目.</p>
<pre class="Syntax">Func.MaxParams</pre>
<p>如果函数是 <a href="../Functions.htm#Variadic">可变参数</a> 的, 返回值表示函数在不考虑 "variadic*" 可变参数的情况下可接受的最大参数数目.</p></div>

<div class="methodShort" id="IsByRef"><h2>IsByRef()</h2>
<p>确定一个参数是否为 ByRef (按地址传递) 类型.</p>
<pre class="Syntax">Func.IsByRef(ParamIndex)</pre>
<table class="info">
  <tr><td style="width:15%">ParamIndex</td><td>可选: 基于 1 的参数索引. 如果省略, 那么返回值表示此函数是否含有 ByRef 参数.</td></tr>
  <tr><td><b>返回值</b></td><td>如果函数为内置函数或 <i>ParamIndex</i> 无效时返回空字符串; 否则返回布尔值表示此参数是否为 ByRef 类型.</td></tr>
</table>
</div>

<div class="methodShort" id="IsOptional"><h2>IsOptional()</h2>
<p>确定一个参数是否是可选的.</p>
<pre class="Syntax">Func.IsOptional(ParamIndex)</pre>
<table class="info">
  <tr><td style="width:15%">ParamIndex</td><td>可选: 基于 1 的参数索引. 如果省略, 返回值表示此函数是否含有可选参数.</td></tr>
  <tr><td><b>返回值</b></td><td>如果 <i>ParamIndex</i> 无效则返回空字符串; 否则返回 布尔值 (true / false) 表示此参数是否可选.</td></tr>
</table>
<p>如果此函数是可变参数的, 那么参数可以不进行正式声明. 支持内置函数.</p></div>

</body>
</html>
