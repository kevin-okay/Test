<!DOCTYPE HTML>
<html>
<head>
<title>PixelSearch</title>
<meta http-equiv="content-type" content="text/html; charset=GB2312">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>PixelSearch</h1>

<p>在屏幕某个区域中搜索指定颜色所在的像素.</p>

<pre class="Syntax">PixelSearch, OutputVarX, OutputVarY, X1, Y1, X2, Y2, ColorID [, Variation, Fast|RGB]</pre>
<h3>参数</h3>
<dl>

  <dt>OutputVarX/Y</dt>
  <dd><p>用来保存首个匹配 <em>ColorID</em> 像素的 X 和 Y 坐标 (如果没有发现匹配, 则此变量被置空). 坐标相对于活动窗口, 除非曾使用 <a href="CoordMode.htm">CoordMode</a> 改变了这个设置.</p>
    <p>其中一个或两个参数都可以留空, 此时可以使用 ErrorLevel (请参阅下面) 来判断是否找到了匹配.</p></dd>

  <dt>X1, Y1</dt>
  <dd><p>要搜索的矩形区域的左上角的 X 和 Y 坐标, 可以为 <a href="../Variables.htm#Expressions">表达式</a>. <strong>坐标相对于活动窗口,除非曾使用 <a href="CoordMode.htm">CoordMode</a> 改变了这个设置</strong>.</p></dd>

  <dt>X2, Y2</dt>
  <dd><p>要搜索的矩形区域的右下角的 X 和 Y 坐标, 可以为 <a href="../Variables.htm#Expressions">表达式</a>. 坐标相对于活动窗口, 除非曾使用 <a href="CoordMode.htm">CoordMode</a> 改变了这个设置.</p></dd>

  <dt>ColorID</dt>
  <dd><p>要搜索的十进制或十六进制的颜色 ID, 使用蓝绿红 (BGR) 格式, 可以为 <a href="../Variables.htm#Expressions">表达式</a>. 颜色 ID 可以使用 Window Spy (可从托盘菜单打开) 或 <a href="PixelGetColor.htm">PixelGetColor</a> 来确定. 例如:<code>0x9d6346</code>.</p></dd>

  <dt>Variation</dt>
  <dd><p>一个介于 0 和 255 (包含的) 之间的数字, 用于表示此颜色红/绿/蓝成分强度在每个方向上允许的渐变值 (可以为 <a href="../Variables.htm#Expressions">表达式</a>). 此参数用于需要寻找的颜色渐变值可能变化时. 如果指定 255 为浮动的渐变值, 则匹配所有颜色. 默认渐变值为 0.</p></dd>

  <dt>Fast|RGB</dt>
  <dd><p>此参数可以包含单词 Fast, RGB 或同时包含两者 (同时包含两者时它们之间请用空格分隔; 即 <em>Fast RGB</em>).</p>
      <p id="fast"><strong>Fast</strong>: 使用快速的搜索方法, 在大多数情况下此方法可以明显减少搜索时消耗的 CPU 时间. 尽管此方法支持颜色深度低至 8 位 (256 色), 不过在 24 位或 32 位颜色深度下此快速模式执行地更好. 如果屏幕的颜色深度为 16 位或更低, 则 <em>Variation</em> 参数在慢速模式和快速模式的行为可能有轻微的差异. 最后, 快速模式按行搜索屏幕 (从上往下) 而不是按列. 因此, 如果屏幕上有多个匹配的像素, 则快速模式可能找到一个和慢速模式不同的像素.</p>
      <p><strong>RGB</strong>: 把 <em>ColorID</em> 解释为 RGB 值而不是 BGR. 即交换了其中的红色和蓝色的成分.</p></dd>

</dl>

<h3>ErrorLevel</h3>
<p><span class="ver">[v1.1.04+]</span> 此命令在搜索遇到问题时会抛出异常. 想了解更多信息, 请参阅 <a href="Catch.htm#RuntimeErrors">运行时错误</a>.</p>
<p>如果在指定的区域找到指定的颜色, 则 <a href="../misc/ErrorLevel.htm">ErrorLevel</a> 被设置为 0, 没有找到则为 1, 而如果在命令执行过程中遇到问题使搜索无法进行则为 2.</p>
<h3>备注</h3>
<p>要搜索的目标区域必须是可见的; 换句话说, 无法搜索隐藏在其他窗口背后的窗口区域. 与之相比, 鼠标光标下方的像素颜色通常可以检测出来. 例外情况是游戏的指针, 在大多数情况下它会隐藏在它下方的任何像素.</p>
<p>对于慢速模式: 默认情况下从区域左上角的像素开始搜索, 在垂直方向上检查下面所有像素以寻找匹配. 如果没有找到匹配, 则继续往右逐列搜索, 直到找到一个匹配的像素. 通过交换参数列中 <em>X1</em> 和 <em>X2</em> 的位置, 可以使默认的从左往右搜索反向进行. 换句话说, 如果 <em>X1</em> 大于 <em>X2</em>, 搜索会从右往左进行, 从 <em>X1</em> 开始. 同样地, 如果 <em>Y1</em> 大于 <em>Y2</em>, 则从区域底部而不是顶部开始搜索每列像素. 最后, 当需要搜索的目标区域很大而且快速的重复搜索, 这可能会占用大量的 CPU 时间. 为了减轻这种情况, 请保持目标区域的大小为最小值.</p>
<h3>相关</h3>
<p><a href="PixelGetColor.htm">PixelGetColor</a>, <a href="ImageSearch.htm">ImageSearch</a>, <a href="CoordMode.htm">CoordMode</a>, <a href="MouseGetPos.htm">MouseGetPos</a></p>
<h3>示例</h3>
<pre class="NoIndent">PixelSearch, Px, Py, 200, 200, 300, 300, 0x9d6346, 3, Fast
if ErrorLevel
    MsgBox, That color was not found in the specified region.
else
    MsgBox, A color within 3 shades of variation was found at X%Px% Y%Py%.</pre>

</body>
</html>
