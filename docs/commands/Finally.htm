<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Finally</title>
<meta http-equiv="content-type" content="text/html; charset=GB2312">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery.js" type="text/javascript"></script>
<script src="../static/tree.jquery.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Finally <span class="ver">[v1.1.14+]</span></h1>

<p>确保在<a href="Try.htm">try</a>语句后总是会执行的一个或多个语句（命令或表达式）。</p>

<pre class="Syntax">Finally <i>Statement</i></pre>
<pre class="Syntax" style="line-height: 100%">Finally
{
    <i>Statements</i>
}</pre>
<h3>备注</h3>
<p>每次使用<em>finally</em>都必须附属于（与之关联）它上面的<a href="Try.htm">try</a>（或<a href="Catch.htm">catch</a>）语句。<em>finally</em>总是附属于它上面且离它最近的无主<em>try</em>语句，不过可以使用<a href="Block.htm">区块</a>改变这种行为。</p>
<p>如果<em>finally</em>语句使用在不含<em>catch</em>块的<em>try</em>语句中，则以后无法清除这里出现的异常且在<em>finally</em>语句执行后异常传播仍会继续。</p>
<p>不允许使用<em>goto</em>/<em>break</em>/<em>continue</em>退出<em>finally</em>语句，因为这样会中断异常传播（不过可以在区块中正常使用以确保持续执行）。在加载时会检测到这种错误（以及运行时的动态<em>goto</em>语句）。</p>
<p><a href="Block.htm#otb">One True Brace (OTB)风格</a>可以用于<em>finally</em>命令中。例如：</p>
<pre>try <strong>{</strong>
    ...
<strong>}</strong> finally <strong>{</strong>
    ...
<strong>}</strong>

try <strong>{</strong>
    ...
<strong>}</strong> catch e <strong>{</strong>
    ...
<strong>}</strong> finally <strong>{</strong>
    ...
<strong>}</strong></pre>
<h3>相关</h3>
<p><a href="Try.htm">Try</a>, <a href="Catch.htm">Catch</a>, <a href="Throw.htm">Throw</a>, <a href="Block.htm">区块</a></p>
<h3 id="Examples">示例</h3>
<pre class="NoIndent">try
{
    ToolTip, Working...
    Example1()
}
catch e
{
    <em>; 关于e对象的更多细节，请参阅<a href="Catch.htm">Catch</a>。</em>
    MsgBox, 16,, % "Exception thrown!`n`nwhat: " e.what "`nfile: " e.file
        . "`nline: " e.line "`nmessage: " e.message "`nextra: " e.extra
}
finally
{
    ToolTip <em>; 隐藏工具提示</em>
}

MsgBox, Done!<em>; 此函数包含了清理代码的Finally区块</em>
Example1()
{
    try
        Example2()
    finally
        MsgBox, This is always executed regardless of exceptions
}

<em>; 分钟数为奇数时此函数执行时出错</em>
Example2()
{
    if Mod(A_Min, 2)
        throw Exception("Test exception")
    MsgBox, Example2 did not fail
}</pre>

</body>
</html>
