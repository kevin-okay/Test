<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>#EscapeChar (及转义序列的说明)</title>
<meta http-equiv="content-type" content="text/html; charset=GB2312">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>#EscapeChar (及转义序列的说明)</h1>

<p>改变脚本的转义符 (例如重音符与反斜线).</p>

<pre class="Syntax">#EscapeChar NewChar</pre>
<h3>参数</h3>
<dl>

  <dt>NewChar</dt>
  <dd><p>指定单个字符.</p></dd>

</dl>
<h3>备注</h3>
<p>转义符用来表明在其后紧跟着的字符不能像平常那样进行解释.</p>
<p>默认的转义符为重音符（`）。</p>
<h3>转义序列 (当重音符为转义符时)</h3>
<table class="info">
  <tr>
    <th>输入这些字符</th>
    <th>得到这些字符</th>
  </tr>
  <tr>
    <td width="15%">`,</td>
    <td width="85%">, (原义的逗号). <strong>注意:</strong> 在命令最后一个参数中的逗号不需要转义, 因为程序知道把它们作为原义处理. 对于 <a href="MsgBox.htm">MsgBox</a> 所有参数同样如此, 因为它会智能的处理逗号.</td>
  </tr>
  <tr>
    <td>`%</td>
    <td>% (原义的百分号)</td>
  </tr>
  <tr>
    <td>``</td>
    <td>` (原义的重音符; 即两个连续的转义符产生单个原义字符)</td>
  </tr>
  <tr>
    <td>`;</td>
    <td>&nbsp;; (原义的分号). <strong>注意:</strong> <u>仅</u> 在分号的左边有空格或 tab 才需要. 如果没有, 那么它可以被正常识别而不需要转义.</td>
  </tr>
  <tr>
    <td>`::</td>
    <td>:: (原义的双冒号). 在 v1.0.40+, 不再需要对它们进行转义.</td>
  </tr>
  <tr>
    <td>`n</td>
    <td>新行 (换行/LF)</td>
  </tr>
  <tr>
    <td>`r</td>
    <td>回车 (CR)</td>
  </tr>
  <tr>
    <td>`b</td>
    <td>退格</td>
  </tr>
  <tr>
    <td>`t</td>
    <td>tab (最典型的水平移位)</td>
  </tr>
  <tr>
    <td>`v</td>
    <td>垂直 tab -- 对应的 Ascii 值为 11. 在一些应用程序中可以通过键入 Control+K 让它显示出来.</td>
  </tr>
  <tr>
    <td>`a</td>
    <td>警告 (铃) -- 对应的 Ascii 值为 7. 在一些应用程序中可以通过键入 Control+G 让它显示出来.</td>
  </tr>
  <tr>
    <td>`f</td>
    <td>进纸 -- 对应的 Ascii 值为 12. 在一些应用程序中可以通过键入 Control+L 让它显示出来.</td>
  </tr>
  <tr>
    <td>Send</td>
    <td>以默认 (非原始) 模式使用 <a href="Send.htm">Send 命令</a> 或 <a href="Hotstrings.htm">热字串</a> 时, 像 {}^!+# 这些字符具有特殊含义. 因此, 要使用它们的原义字符, 必须把它们包围在大括号中. 例如：<code>Send {<strong>^</strong>}{<strong>!</strong>}{<strong>{</strong>}</code>。</td>
  </tr>
  <tr>
    <td>""</td>
    <td>在 <a href="../Variables.htm#Expressions">表达式</a> 中, 原义字符串内的两个连续的引号被解析为单个原义的引号. 例如：<code>Var := "The color ""red"" was found."</code>。</td>
  </tr>
</table>
<h3>相关</h3>
<p><a name="DerefChar"></a><a name="Delimiter"></a>还有下面这些极少使用的指令; 它们的用法如这些例子所示:</p>
<pre>#DerefChar #  <em>; 把默认的引用符号 % 改为此符号.</em>
#Delimiter /  <em>; 把默认的分隔符号逗号改为此符号.</em></pre>
<h3>示例</h3>
<pre class="NoIndent">#EscapeChar \  <em>; 把默认的重音符 (`) 改为反斜线.</em></pre>

</body>
</html>
