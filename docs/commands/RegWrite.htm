<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>RegWrite</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>RegWrite</h1>

<p>写入值到注册表。</p>

<pre class="Syntax">RegWrite, ValueType, RootKey\SubKey [, ValueName, Value]  <em>; v1.1.21+</em>
RegWrite, ValueType, RootKey, SubKey [, ValueName, Value]</pre>
<h3>参数</h3>
<dl>

  <dt>ValueType</dt>
  <dd><p>必须为 REG_SZ, REG_EXPAND_SZ, REG_MULTI_SZ, REG_DWORD 或 REG_BINARY 的其中一个.</p></dd>

  <dt>RootKey</dt>
  <dd><p>必须为 HKEY_LOCAL_MACHINE, HKEY_USERS, HKEY_CURRENT_USER, HKEY_CLASSES_ROOT 或 HKEY_CURRENT_CONFIG 的其中一个 (或者它们的缩写, 例如 HKLM). 要访问远程注册表, 请在前面加上计算机名和冒号 (或 v1.1.21+ , 正斜线 /), 例如: <code>\\workstation01:HKEY_LOCAL_MACHINE</code></p></dd>

  <dt>SubKey</dt>
  <dd><p>子键名 (例如 Software\SomeApplication). 如果 <em>SubKey</em> 不存在，则进行创建（需要时创建它的父键以及父键的父键等）。如果 <em>SubKey</em> 留空, 则直接把值写入到 <em>RootKey</em> (不过一些操作系统可能会拒绝写入到 HKEY_CURRENT_USER 的根键中).</p></dd>
  
  <dt>RootKey\SubKey <span class="ver">[v1.1.21+]</span></dt>
  <dd><p>If <em>RootKey</em> is followed immediately by a slash (<code>\</code>), <em>RootKey</em> and <em>SubKey</em> are merged into a single parameter.</p></dd>

  <dt>ValueName</dt>
  <dd><p>将被写入的值名. 如果为空或省略, 则使用 <em>Subkey</em> 的默认值, 这是在注册表中值名显示为 "(默认)" 的值.</p></dd>

  <dt>值</dt>
  <dd><p>要写入的值. 如果省略, 则根据 <em>ValueType</em> 的不同它默认为空字符串或 0. 如果文本较长, 可以通过 <a href="../Scripts.htm#continuation">延续片段</a> 的方法将其分解成较短的几行, 这样可以增加可读性和可维护性.</p></dd>

</dl>
<h3>ErrorLevel</h3>
<p><span class="ver">[v1.1.04+]</span> 此命令失败时会抛出异常. 想了解更多信息, 请参阅 <a href="Catch.htm#RuntimeErrors">运行时错误</a>.</p>
<p>如果遇到问题则 <a href="../misc/ErrorLevel.htm">ErrorLevel</a> 被置为 1, 否则为 0.</p>
<p><a href="../Variables.htm#LastError">A_LastError</a> 被设置为操作系统 GetLastError() 函数返回的结果.</p>
<h3>备注</h3>
<p>如果 <em>ValueType</em> 为 REG_DWORD, 则 <em>Value</em> 应该介于 -2147483648 和 4294967295 (0xFFFFFFFF) 之间.</p>
<p>写入 REG_BINARY 键时, 请使用十六进制的字符串, 例如 REG_BINARY 值 01,a9,ff,77 在写入时要使用字符串 01A9FF77.</p>
<p>写入 REG_MULTI_SZ 键时, 您必须使用换行符 (`n) 分隔各个部分. 最后一个部分后面的换行符是可选的. 不允许存在空的部分. 换句话说, 在一行中不能连续指定两个换行符 (`n`n), 因为这样会导致写入到注册表的值比期望的短.</p>
<p>在 v1.1.10.01 或更高版本中支持大于 64K 的 REG_BINARY 和 REG_MULTI_SZ 值。在旧版本中，它们会被截断成 64K。</p>
<p>要获取和操作多个注册表键或值, 请考虑使用 <a href="LoopReg.htm">注册表循环</a>.</p>
<p>关于如何访问远程计算机注册表的详情, 请参阅 <a href="LoopReg.htm">注册表循环</a> 中的备注.</p>
<p>要在 32 位脚本中读写注册表 64 位部分的条目或进行相反的操作，请使用 <a href="SetRegView.htm">SetRegView</a>。</p>

<h3>相关</h3>
<p><a href="RegDelete.htm">RegDelete</a>, <a href="RegRead.htm">RegRead</a>, <a href="LoopReg.htm">注册表循环</a>, <a href="SetRegView.htm">SetRegView</a>, <a href="IniWrite.htm">IniWrite</a></p>
<h3>示例</h3>
<pre class="NoIndent">RegWrite, REG_SZ, HKEY_LOCAL_MACHINE, SOFTWARE\TestKey, MyValueName, Test Value
RegWrite, REG_BINARY, HKEY_CURRENT_USER, Software\TEST_APP, TEST_NAME, 01A9FF77
RegWrite, REG_MULTI_SZ, HKEY_CURRENT_USER, Software\TEST_APP, TEST_NAME, Line1`nLine2

<em>; Alternative syntax (requires v1.1.21+):</em>
RegWrite, REG_SZ, HKEY_LOCAL_MACHINE\SOFTWARE\TestKey, MyValueName, Test Value
RegWrite, REG_BINARY, HKEY_CURRENT_USER\Software\TEST_APP, TEST_NAME, 01A9FF77
RegWrite, REG_MULTI_SZ, HKEY_CURRENT_USER\Software\TEST_APP, TEST_NAME, Line1`nLine2</pre>

</body>
</html>
