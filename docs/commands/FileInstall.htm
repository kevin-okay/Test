<!DOCTYPE HTML>
<html>
<head>
<title>FileInstall</title>
<meta http-equiv="content-type" content="text/html; charset=GB2312">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>FileInstall</h1>

<p>封装指定的文件到脚本的<a href="Scripts.htm#ahk2exe">已编译版本</a>中.</p>

<pre class="Syntax">FileInstall, Source, Dest [, Flag]</pre>
<h3>参数</h3>
<dl>

  <dt>Source</dt>
  <dd><p>要添加到已编译可执行文件中的文件名. 如果未指定绝对路径, 则假定文件在相对于脚本的目录中.</p>
    <p>文件名 <strong>不能</strong> 包含双引号, 变量引用 (例如 %A_ProgramFiles%) 或通配符. 此外, 任何特殊字符 (例如原义的百分号和逗号) 必须 <a href="_EscapeChar.htm">进行转义</a> (如同在其他所有命令的参数中一样). 最后, 此参数必须放在 FileInstall 的右边而不能在下面 (即不能在命令的下面使用 <a href="../Scripts.htm#continuation">延续行</a>).</p></dd>

  <dt>Dest</dt>
  <dd><p>从可执行文件中释放 <em>Source</em> 时使用的文件名. 如果未指定绝对路径则假定在 <a href="../Variables.htm#WorkingDir">%A_WorkingDir%</a>. 目标目录必须已经存在. 与 <em>Source</em> 不同, 这里可以使用变量引用.</p></dd>

  <dt>Flag</dt>
  <dd><p>(可选参数) 此标志决定了是否覆盖现有的文件:</p>
        <p>0 = (默认) 不覆盖现有的文件1 = 覆盖现有的文件</p>
        <p>此参数可以为 <a href="../Variables.htm#Expressions">表达式</a>, 甚至是计算结果为真或假的表达式 (因为真和假内部分别保存为 1 和 0).</p></dd>

</dl>
<h3>ErrorLevel</h3>
<p><span class="ver">[v1.1.04+]</span> 此命令失败时会抛出异常. 想了解更多信息, 请参阅 <a href="Catch.htm#RuntimeErrors">运行时错误</a>.</p>
<p>如果遇到问题则 <a href="../misc/ErrorLevel.htm">ErrorLevel</a> 被置为 1, 否则为 0.</p>
<h3>备注</h3>
<p>此命令是为 <a href="Scripts.htm#ahk2exe">Ahk2Exe 编译器</a> 提供的指令, 允许您添加额外的文件到最终的已编译脚本. 随后, 当已编译脚本运行时, 文件会被释放到磁盘中.</p>
<p>该文件会<strong>在脚本编译时</strong>添加进去.已编译脚本执行到同一个"FileInstall"命令时,该文件会被释放到 <em>Dest</em>.</p>
<p>添加文件到脚本时会进行压缩和加密.</p>
<p>如果在普通 (未编译) 脚本中使用此命令, 则会简单地复制一个副本, 这样可以帮助测试最终会进行编译的脚本.</p>
<h3>相关</h3>
<p><a href="FileCopy.htm">FileCopy</a>, <a href="_Include.htm">#Include</a></p>
<h3>示例</h3>
<pre class="NoIndent">FileInstall, C:\My Documents\My File.txt, %A_ProgramFiles%\My Application\Readme.txt, 1</pre>

</body>
</html>
