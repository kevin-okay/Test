<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>IfWinExist / IfWinNotExist / WinExist</title>
<meta http-equiv="content-type" content="text/html; charset=GB2312">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>IfWinExist / IfWinNotExist / WinExist</h1>

<p>检查是否存在匹配的窗口。<em>WinExist()</em> 返回首个匹配窗口的<a href="WinGet.htm">唯一 ID（HWND）</a>。</p>

<pre class="Syntax">IfWinExist [, WinTitle, WinText,  ExcludeTitle, ExcludeText]
IfWinNotExist [, WinTitle, WinText, ExcludeTitle, ExcludeText]
<a href="WinGet.htm">UniqueID</a> := WinExist("WinTitle", "WinText", "ExcludeTitle", "ExcludeText")</pre>
<h3>参数</h3>
<dl>

  <dt>UniqueID</dt>
  <dd><p>首个匹配指定条件窗口的<a href="WinGet.htm">唯一 ID（HWND）</a>（作为十六进制整型）。</p></dd>

  <dt>WinTitle</dt>
  <dd><p>窗口标题或识别目标窗口的其他条件。请参阅 <a href="../misc/WinTitle.htm">WinTitle</a>。</p></dd>

  <dt>WinText</dt>
  <dd><p>如果使用此参数, 那么它必须是目标窗口中单个文本元素的子字符串 (和内置的 Window Spy 工具显示的一样). 当 <a href="DetectHiddenText.htm">DetectHiddenText</a> 的设置为 ON 时, 那么会检测到隐藏文本元素.</p></dd>

  <dt>ExcludeTitle</dt>
  <dd><p>标题中含有此参数值的窗口将被排除. 注：由于向后兼容性，所以如果此参数准确匹配某个命令名，那么 <em>IfWinExist</em> 和 <em>IfWinNotExist</em> 会将其作为命令解释。要变通解决此问题，请使用 <em>WinExist()</em> 函数代替。</p></dd>

  <dt>ExcludeText</dt>
  <dd><p>文本中含有此参数值的窗口将被排除.</p></dd>

</dl>

<h3>备注</h3>
<p>如果省略所有参数，那么将检查<a href="../misc/WinTitle.htm#LastFoundWindow">上次找到的窗口</a>看它是否仍然存在（如果是 <i>IfWinNotExist</i> 则检查其是否不存在）。</p>
<p>如果这些命令的其中一个确定了某个符合的窗口存在, 那么 <a href="../misc/WinTitle.htm#LastFoundWindow">上次找到的窗口</a> 将更新为此窗口. 换句话说，如果 <em>IfWinExist</em> 匹配结果为真或 <em>IfWinNotExist</em> 匹配结果为假，那么将更新<a href="../misc/WinTitle.htm#LastFoundWindow">上次找到的窗口</a>。</p>
<p><i>WinExist()</i> 返回首个匹配窗口的 <a href="WinGet.htm">唯一 ID （HWND）</a>（没有找到匹配时则为 0）。由于所有非零值都被视为“true”，所以每当 <em>WinTitle</em> 存在时 <code>if WinExist("WinTitle")</code> 语句为真。</p>
<p>要获取控件的 HWND (用于 <a href="PostMessage.htm">Post/SendMessage</a> 或 <a href="DllCall.htm">DllCall</a> 中), 请使用 <a href="ControlGet.htm#Hwnd">ControlGet Hwnd</a> 或 <a href="MouseGetPos.htm">MouseGetPos</a>.</p>
<p><a href="SetWinDelay.htm">SetWinDelay</a> 不适用于 <i>IfWinExist</i>、<a href="WinActive.htm">IfWinActive</a>。</p>
<p>窗口标题和文本是区分大小写的. 只有在打开 <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> 设置时，才能检测到隐藏窗口。</p>

<h3>相关</h3>
<p><a href="WinActive.htm">IfWinActive</a>, <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>, <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a>, <a href="../misc/WinTitle.htm#LastFoundWindow">上次找到的窗口</a>, <a href="Process.htm">Process</a>, <a href="WinActivate.htm">WinActivate</a>, <a href="WinWaitActive.htm">WinWaitActive</a>, <a href="WinWait.htm">WinWait</a>, <a href="WinWaitClose.htm">WinWaitClose</a>, <a href="_IfWinActive.htm">#IfWinActive/Exist</a></p>
<h3>示例</h3>
<pre class="NoIndent"><em>; 例 1</em>
IfWinExist, Untitled - Notepad
{
    WinActivate  <em>; 自动使用上面找到的窗口.</em>
    WinMaximize  <em>; 同上</em>
    Send, Some text.{Enter}
    return
}

<em>; 例 2</em>
IfWinNotExist, Calculator
    return
else
{
    WinActivate  <em>; 前面的“IfWinNotExist”也设置了上次找到的窗口。</em>
    WinMove, 40, 40  <em>; 把它移动到新位置。</em>
    return
}

<em>; 例 3</em>
if WinExist("ahk_class Notepad") or WinExist("ahk_class" . ClassName)
    WinActivate  <em>; 使用<a href="../misc/WinTitle.htm#LastFoundWindow">最近找到的窗口</a>。</em>

MsgBox % "The active window's ID is " . WinExist("A")

<em>; 例 4: 等同于 IfWinNotExist, Calculator</em>
If !WinExist("Calculator")
    return</pre>
	
</body>
</html>
